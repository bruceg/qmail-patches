This patch makes the ext_todo patch work with Russell Nelson's
big-todo patch. Apply big-todo, then ext_todo, then this patch.

Please report any comments or bugs in this patch to
Andreas Aardal Hanssen <andreas@hanssen.name> (protected by tmda).

Updated 2002-07-12 17:17:00 CET: Removed last section in patch,
  which caused message sizes to not get calculated.


diff -uN qmail-1.03/qmail-todo.c qmail-1.03-fixed/qmail-todo.c
--- qmail-1.03/qmail-todo.c	Fri Jul  5 11:22:12 2002
+++ qmail-1.03-fixed/qmail-todo.c	Fri Jul  5 11:18:27 2002
@@ -74,7 +82,7 @@
 }
 
 void fnmake_info(unsigned long id) { fn.len = fmtqfn(fn.s,"info/",id,1); }
-void fnmake_todo(unsigned long id) { fn.len = fmtqfn(fn.s,"todo/",id,0); }
+void fnmake_todo(unsigned long id) { fn.len = fmtqfn(fn.s,"todo/",id,1); }
 void fnmake_mess(unsigned long id) { fn.len = fmtqfn(fn.s,"mess/",id,1); }
 void fnmake_chanaddr(unsigned long id, int c)
 { fn.len = fmtqfn(fn.s,chanaddr[c],id,1); }
@@ -329,7 +392,8 @@
 /* this file is not too long ------------------------------------------ TODO */
 
 datetime_sec nexttodorun;
-DIR *tododir; /* if 0, have to opendir again */
+int flagtododir = 0; /* if 0, have to readsubdir_init again */
+readsubdir todosubdir;
 stralloc todoline = {0};
 char todobuf[SUBSTDIO_INSIZE];
 char todobufinfo[512];
@@ -337,7 +401,7 @@
 
 void todo_init(void)
 {
- tododir = 0;
+ flagtododir = 0;
  nexttodorun = now();
  trigger_set();
 }
@@ -346,7 +410,7 @@
 {
  if (flagexitasap) return;
  trigger_selprep(nfds,rfds);
- if (tododir) *wakeup = 0;
+ if (flagtododir) *wakeup = 0;
  if (*wakeup > nexttodorun) *wakeup = nexttodorun;
 }
 
@@ -361,8 +425,7 @@
  char ch;
  int match;
  unsigned long id;
- unsigned int len;
- direntry *d;
+ int z;
  int c;
  unsigned long uid;
  unsigned long pid;
@@ -373,32 +436,26 @@
 
  if (flagexitasap) return;
 
- if (!tododir)
+ if (!flagtododir)
   {
    if (!trigger_pulled(rfds))
      if (recent < nexttodorun)
        return;
    trigger_set();
-   tododir = opendir("todo");
-   if (!tododir)
-    {
-     pausedir("todo");
-     return;
-    }
+   readsubdir_init(&todosubdir, "todo", pausedir);
+   flagtododir = 1;
    nexttodorun = recent + SLEEP_TODO;
   }
 
- d = readdir(tododir);
- if (!d)
+ switch(readsubdir_next(&todosubdir, &id))
   {
-   closedir(tododir);
-   tododir = 0;
-   return;
+    case 1:
+      break;
+    case 0:
+      flagtododir = 0;
+    default:
+      return; 
   }
- if (str_equal(d->d_name,".")) return;
- if (str_equal(d->d_name,"..")) return;
- len = scan_ulong(d->d_name,&id);
- if (!len || d->d_name[len]) return;
 
  fnmake_todo(id);
 
